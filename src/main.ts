import { ValidationPipe, Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import helmet from 'helmet';
import * as morgan from 'morgan';
import { AppModule } from './app.module';
import * as passport from 'passport';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // 1) –ó–∞—â–∏—Ç–∞ HTTP-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  app.use(helmet());

  // 2) –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  app.use(morgan('combined'));

  // 3) –†–∞–∑—Ä–µ—à–∏—Ç—å CORS (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–æ–≤)
  app.enableCors();

  // 4) –ì–ª–æ–±–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–∏—Ö DTO
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–æ–ª—è
      forbidNonWhitelisted: true, // –±—Ä–æ—Å–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ–ª—è—Ö
      transform: true, // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç payload –≤ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã
    }),
  );

  app.use(passport.initialize());

  const port = process.env.PORT || 3000;
  await app.listen(port);
  Logger.log(`üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:${port}`);
}
bootstrap();
